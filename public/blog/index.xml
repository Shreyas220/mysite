<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog Posts on Hugoplate</title><link>https://example.org/blog/</link><description>Recent content in Blog Posts on Hugoplate</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 10 Mar 2025 05:00:00 +0000</lastBuildDate><atom:link href="https://example.org/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Fault tolerance in MillWheels</title><link>https://example.org/blog/millwheel/</link><pubDate>Mon, 10 Mar 2025 05:00:00 +0000</pubDate><guid>https://example.org/blog/millwheel/</guid><description>&lt;p>ðŸš§Â Under Construction ðŸš§&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Streaming systems operate under challenging conditions where data flows continuously, errors can occur at any stage, and any downtime may lead to lost or inconsistent information. This makes fault tolerance not just a feature but a necessity for ensuring that systems quickly recover from failures while maintaining state consistency and processing guarantee&lt;/p></description></item><item><title>Gossip Protocol</title><link>https://example.org/blog/gossip/</link><pubDate>Mon, 10 Mar 2025 05:00:00 +0000</pubDate><guid>https://example.org/blog/gossip/</guid><description>&lt;h2 id="gossip">Gossip&lt;/h2>
&lt;p>Introduction to gossip protocol&lt;/p>
&lt;h2 id="why-do-we-need-gossip-protocol-">Why do we need gossip protocol ?&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Centralized Coordination Overhead&lt;/strong>&lt;/p></description></item></channel></rss>